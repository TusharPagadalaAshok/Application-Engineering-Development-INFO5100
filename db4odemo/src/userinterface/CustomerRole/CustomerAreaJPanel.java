/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.EcoSystem;
import Business.Order.Order;
import Business.Restaurant.Restaurant;

import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class CustomerAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UserAccount userAccount;
    EcoSystem system;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public CustomerAreaJPanel(JPanel userProcessContainer, EcoSystem system, UserAccount account) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.userAccount = account;
        Greeting.setText("Welcome! " + account.getUsername());
        populateRestaurantTable();
        populateOrderHistory();
    }
    
    public void populateRestaurantTable(){
        
        DefaultTableModel model = (DefaultTableModel) AvailableResTable.getModel();
        
                 model.setRowCount(0);
                Object[] row = new Object[3];
                for(Restaurant res:system.getRestaurantDirectory().getRestaurantList()){
                     row[0] = res;
                     row[1] = res.getAddress();
                     row[2] = res.getNumber();
                     model.addRow(row);
                }
               
            }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Greeting = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AvailableResTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        RecentOrderTable = new javax.swing.JTable();
        TitlePastOrders = new javax.swing.JLabel();
        OrderFoodButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Greeting.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Greeting.setForeground(new java.awt.Color(255, 0, 204));
        Greeting.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        add(Greeting, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 400, 30));

        AvailableResTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Address", "Number"
            }
        ));
        jScrollPane1.setViewportView(AvailableResTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 370, 210));

        RecentOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "OrderID", "Name", "Status"
            }
        ));
        jScrollPane2.setViewportView(RecentOrderTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 150, 460, 220));

        TitlePastOrders.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        TitlePastOrders.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitlePastOrders.setText("Order History");
        add(TitlePastOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 120, 400, 30));

        OrderFoodButton.setBackground(new java.awt.Color(255, 255, 204));
        OrderFoodButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        OrderFoodButton.setText("Order");
        OrderFoodButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderFoodButtonActionPerformed(evt);
            }
        });
        add(OrderFoodButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, 210, 60));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("List of Available restaurants");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 350, 30));

        jLabel2.setBackground(new java.awt.Color(255, 204, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Customer Area");
        jLabel2.setOpaque(true);
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1230, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void OrderFoodButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderFoodButtonActionPerformed
        // TODO add your handling code here:
        System.out.println("HERE IN ORDER ");
        if(AvailableResTable.getSelectedRow()<0){
            JOptionPane.showMessageDialog(null,"Please select a row");
        }
        else{
           Restaurant restaurant = (Restaurant)AvailableResTable.getValueAt(AvailableResTable.getSelectedRow(), 0);
           System.out.println("HERE IN if condition ");     
           MenuJPanel manageMenu=new MenuJPanel(userProcessContainer,userAccount,system,restaurant);
           userProcessContainer.add("Manage Restaurant",manageMenu);
           CardLayout layout=(CardLayout)userProcessContainer.getLayout();
           layout.next(userProcessContainer);
        }  
    }//GEN-LAST:event_OrderFoodButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AvailableResTable;
    private javax.swing.JLabel Greeting;
    private javax.swing.JButton OrderFoodButton;
    private javax.swing.JTable RecentOrderTable;
    private javax.swing.JLabel TitlePastOrders;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    void populateOrderHistory() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    DefaultTableModel model = (DefaultTableModel) RecentOrderTable.getModel();
    model.setRowCount(0);
    for (Customer cust:system.getCustomerDirectory().getCustList()) {
        if (cust.getUserName().equals(userAccount.getUsername())) {
            for(Order menu:cust.getOrderList()){
                Object[] row = new Object[3];
                row[0] = menu;
                row[1] = menu.getRestaurantName();
                row[2] = menu.getOrderStatus();
                model.addRow(row);
               }
                
            }
          }


    }

}
