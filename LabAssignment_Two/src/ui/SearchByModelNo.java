/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.carDetails;
import model.carDetailsHistory;
//import model.myRowFilterCity;
import model.myRowFilterModelNo;

/**
 *
 * @author patus
 */

public class SearchByModelNo extends javax.swing.JPanel {

    /**
     * Creates new form SearchByModelNo
     */
       carDetailsHistory history;
    carDetailsHistory getConfig;
    JPanel rightSplitPane;
    public SearchByModelNo(carDetailsHistory history,carDetailsHistory getConfig, JPanel rightSplitPane) {
        initComponents();
        this.history = history;
        this.getConfig  = getConfig;
        this.rightSplitPane = rightSplitPane;
         getConfigFile();
//        populatetable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TitleCity = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        carTableCity = new javax.swing.JTable();
        SearchByModelNo = new javax.swing.JTextField();
        BtnSearchByModelNo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BackHome = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));
        setToolTipText("");
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TitleCity.setBackground(new java.awt.Color(255, 102, 51));
        TitleCity.setFont(new java.awt.Font("Rockwell", 1, 25)); // NOI18N
        TitleCity.setForeground(new java.awt.Color(255, 255, 255));
        TitleCity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleCity.setText("Search By Model Number");
        TitleCity.setOpaque(true);
        add(TitleCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1170, 31));

        carTableCity.setBackground(new java.awt.Color(153, 255, 153));
        carTableCity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serial No", "Model", "Manufacturer", "Availability", "Maintenance?", "Min Pssgr", "Max Pssgr", "Manufd Year", "City", "Model No", "Date Modified"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        carTableCity.setGridColor(new java.awt.Color(0, 0, 0));
        carTableCity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                carTableCityMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(carTableCity);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 201, 990, 230));

        SearchByModelNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchByModelNoKeyReleased(evt);
            }
        });
        add(SearchByModelNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 193, 33));

        BtnSearchByModelNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnSearchByModelNo.setText("Search");
        BtnSearchByModelNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSearchByModelNoActionPerformed(evt);
            }
        });
        add(BtnSearchByModelNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 120, -1, 33));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Enter the Model Number:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 160, 30));

        BackHome.setBackground(new java.awt.Color(255, 204, 153));
        BackHome.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BackHome.setText("<<Back");
        BackHome.setOpaque(false);
        BackHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackHomeActionPerformed(evt);
            }
        });
        add(BackHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 116, 32));
    }// </editor-fold>//GEN-END:initComponents

    private void carTableCityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_carTableCityMouseClicked
        // TODO add your handling code here:

        
    }//GEN-LAST:event_carTableCityMouseClicked

    private void SearchByModelNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchByModelNoKeyReleased
        // TODO add your handling code here:
        
//        DefaultTableModel model = (DefaultTableModel) carTableCity.getModel();
////        model.setRowCount(0);
//        String Keyword = SearchByModelNo.getText();
////        String Keyword = TxtSearchCity.getText().toLowerCase();
//        
//            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
//            carTableCity.setRowSorter(tr);
//            tr.setRowFilter(RowFilter.regexFilter(Keyword));
    }//GEN-LAST:event_SearchByModelNoKeyReleased

    private void BtnSearchByModelNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSearchByModelNoActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) carTableCity.getModel();
        TableRowSorter myTableRowSorter = new TableRowSorter(model);
        carTableCity.setModel(model);
        carTableCity.setRowSorter(myTableRowSorter);
        java.util.List<RowFilter<Object,Object>> filters = new ArrayList<RowFilter<Object,Object>>(2);
            filters.add(RowFilter.regexFilter("(?i)" + SearchByModelNo.getText().toString(),9));
            
            
            RowFilter<Object,Object> serviceFilter = RowFilter.andFilter(filters);
            myTableRowSorter.setRowFilter(serviceFilter);
    }//GEN-LAST:event_BtnSearchByModelNoActionPerformed

    private void BackHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackHomeActionPerformed
        // TODO add your handling code here:
        searchMainJPanel BackHome1 = new searchMainJPanel(history, rightSplitPane);
        rightSplitPane.add("Back to Main Menu",BackHome1);
        CardLayout layout = (CardLayout)rightSplitPane.getLayout();
        layout.next(rightSplitPane);
    }//GEN-LAST:event_BackHomeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackHome;
    private javax.swing.JButton BtnSearchByModelNo;
    private javax.swing.JTextField SearchByModelNo;
    private javax.swing.JLabel TitleCity;
    private javax.swing.JTable carTableCity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void populatetable() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
     DefaultTableModel model = (DefaultTableModel) carTableCity.getModel();
//        model.setRowCount(0);
        
        for(carDetails cdh: history.getHistory()){
             Object[] row = new Object[11];
             row[0] = cdh.getCarSerialNo();
             row[1] = cdh.getCarModel();
             row[2] = cdh.getManufacturedBy();
             row[3] = cdh.getAvailability();
             row[4] = cdh.getLastMaintenanceDate();
             row[5] = cdh.getMinPassengerCap();
             row[6] = cdh.getMaxPassengerCap();
             row[7] = cdh.getManufacturedYear();
             row[8] = cdh.getGeoLocation();
             row[9] = cdh.getModelNumber();
             row[10] = cdh.getDate();
//             lblModifiedDateView.setText("Fleet Database was last updated on: "+cdh.getDate());
             model.addRow(row);
             
            
        }


    }

    private void getConfigFile() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        String FilePath = "C:\\Users\\patus\\Documents\\git\\PagadalaAshok_Tushar_002130680\\LabAssignment_Two\\CarData.txt";
        File file = new File(FilePath);
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(file));
            // get the first line
            // get the columns name from the first line
            // set columns name to the jtable model
            String firstLine = br.readLine().trim();
//            String[] columnsName = firstLine.split(",");
            DefaultTableModel model = (DefaultTableModel)carTableCity.getModel();
//            model.setColumnIdentifiers(columnsName);
            
            // get lines from txt file
            Object[] tableLines = br.lines().toArray();
            
            // extratct data from lines
            // set data to jtable model
            for(int i = 0; i < tableLines.length; i++)
            {
                String line = tableLines[i].toString().trim();
                String[] dataRow = line.split("/");
                
                    model.addRow(dataRow);
                
                
                
//                carDetails cdf = getConfig.addNewCarDetailsConfig();
//                cdf.setCarModel(dataRow[i]);
//                cdf.setMinPassengerCap(Integer.parseInt(dataRow[i]));
//                cdf.setMaxPassengerCap(Integer.parseInt(dataRow[i]));
//                cdf.setManufacturedYear(Long.parseLong(dataRow[i]));
//                cdf.setCarSerialNo(Long.parseLong(dataRow[i]));
//                cdf.setManufacturedBy(dataRow[i]);
//                cdf.setGeoLocation(dataRow[i]);
//                cdf.setModelNumber(Double.parseDouble(dataRow[i]));
//                cdf.setAvailability(dataRow[i]);
//                cdf.setLastMaintenanceDate(dataRow[i]);
//                cdf.setDate(dataRow[i]);
            
            }
            
            
             
             
            
 
            
        } catch (Exception ex) {
//            Logger.getLogger(TextFileDataToJTable.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "File not found!");
        }
    }
}

