/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Enumeration;
import java.util.Locale;
import javax.swing.AbstractButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.table.DefaultTableModel;
import model.carDetails;
import model.carDetailsHistory;
import ui.viewJPanel.*;

/**
 *
 * @author patus
 */
public class createJPanel extends javax.swing.JPanel {

    /**
     * Creates new form createJPanel
     */
    carDetailsHistory history;
    public createJPanel(carDetailsHistory history) {
        initComponents();
        this.history = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupMaintenanceCheckCreate = new javax.swing.ButtonGroup();
        buttonGroupAvailabilityCreate = new javax.swing.ButtonGroup();
        lblCarModel = new javax.swing.JLabel();
        lblMinPassengerCap = new javax.swing.JLabel();
        lblMaxPassengerCap = new javax.swing.JLabel();
        lblManufacturedDate = new javax.swing.JLabel();
        lblCarSerialNo = new javax.swing.JLabel();
        lblManufacturedBy = new javax.swing.JLabel();
        lblGeoLocation = new javax.swing.JLabel();
        lblModelNumber = new javax.swing.JLabel();
        lblLastMaintenanceDate = new javax.swing.JLabel();
        TxtCarModel = new javax.swing.JTextField();
        TxtMinPassengerCap = new javax.swing.JTextField();
        TxtMaxPassengerCap = new javax.swing.JTextField();
        TxtCarSerialNo = new javax.swing.JTextField();
        TxtManufacturedBy = new javax.swing.JTextField();
        TxtModelNumber = new javax.swing.JTextField();
        BtnSave = new javax.swing.JButton();
        lblLastMaintenanceDate1 = new javax.swing.JLabel();
        RbAvailabilityYes = new javax.swing.JRadioButton();
        RbAvailabilityNo = new javax.swing.JRadioButton();
        lblDate = new javax.swing.JLabel();
        TxtGeoLocation = new javax.swing.JComboBox<>();
        MaintenanceDateCreate = new com.toedter.calendar.JDateChooser();
        TitleDecor = new javax.swing.JLabel();
        LblMinPassgnrWarning = new javax.swing.JLabel();
        LblMaxPassgnrWarning = new javax.swing.JLabel();
        YearChooserManufacturerYear = new com.toedter.calendar.JYearChooser();
        jLabel1 = new javax.swing.JLabel();
        LblwarningMaintenanceDate = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCarModel.setBackground(new java.awt.Color(204, 153, 255));
        lblCarModel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCarModel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCarModel.setText("Car Model:");
        add(lblCarModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, 110, 40));

        lblMinPassengerCap.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMinPassengerCap.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMinPassengerCap.setText("Min Passenger Capacity:");
        add(lblMinPassengerCap, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 190, 193, -1));

        lblMaxPassengerCap.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMaxPassengerCap.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblMaxPassengerCap.setText("Max Passenger Capacity:");
        add(lblMaxPassengerCap, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 193, -1));

        lblManufacturedDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblManufacturedDate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblManufacturedDate.setText("Manufactured Year:");
        add(lblManufacturedDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 270, 193, -1));

        lblCarSerialNo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCarSerialNo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblCarSerialNo.setText("Car Serial Number*:");
        add(lblCarSerialNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, 193, -1));

        lblManufacturedBy.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblManufacturedBy.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblManufacturedBy.setText("Manufacturer By:");
        add(lblManufacturedBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 350, 193, -1));

        lblGeoLocation.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblGeoLocation.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblGeoLocation.setText("Location:");
        add(lblGeoLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 381, 193, 30));

        lblModelNumber.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblModelNumber.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblModelNumber.setText("Model Number:");
        add(lblModelNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 193, 21));

        lblLastMaintenanceDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblLastMaintenanceDate.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblLastMaintenanceDate.setText("Last Maintenance Date:");
        add(lblLastMaintenanceDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 470, 193, 21));

        TxtCarModel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtCarModelKeyReleased(evt);
            }
        });
        add(TxtCarModel, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 174, 30));

        TxtMinPassengerCap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtMinPassengerCapKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtMinPassengerCapKeyReleased(evt);
            }
        });
        add(TxtMinPassengerCap, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 180, 70, 30));

        TxtMaxPassengerCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtMaxPassengerCapActionPerformed(evt);
            }
        });
        TxtMaxPassengerCap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtMaxPassengerCapKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtMaxPassengerCapKeyReleased(evt);
            }
        });
        add(TxtMaxPassengerCap, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, 70, 30));
        add(TxtCarSerialNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 300, 174, 30));
        add(TxtManufacturedBy, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 340, 174, 30));
        add(TxtModelNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 420, 174, 30));

        BtnSave.setBackground(new java.awt.Color(255, 153, 153));
        BtnSave.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        BtnSave.setText("Save");
        BtnSave.setOpaque(false);
        BtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSaveActionPerformed(evt);
            }
        });
        add(BtnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 570, 160, 50));

        lblLastMaintenanceDate1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblLastMaintenanceDate1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblLastMaintenanceDate1.setText("Available?:");
        add(lblLastMaintenanceDate1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 510, 193, 21));

        buttonGroupAvailabilityCreate.add(RbAvailabilityYes);
        RbAvailabilityYes.setText("Yes");
        add(RbAvailabilityYes, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 510, -1, -1));

        buttonGroupAvailabilityCreate.add(RbAvailabilityNo);
        RbAvailabilityNo.setText("No");
        RbAvailabilityNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RbAvailabilityNoActionPerformed(evt);
            }
        });
        add(RbAvailabilityNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 510, -1, -1));

        lblDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblDate.setForeground(new java.awt.Color(204, 102, 0));
        add(lblDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(476, 110, 300, 20));

        TxtGeoLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "New York City", "Los Angeles", "Chicago", "Houston", "Phoenix", "Philadelphia", "San Antonio", "San Diego", "Dallas", "Austin", "San Jose", "Fort Worth", "Jacksonville", "Columbus", "Charlotte", "Indianapolis", "San Francisco", "Seattle", "Denver", "Washington", "Boston", "El Paso", "Nashville", "Oklahoma City", "Las Vegas", "Detroit", "Portland", "Memphis", "Louisville", "Milwaukee", "Baltimore", "Albuquerque", "Tucson", "Mesa", "Fresno", "Sacramento", "Atlanta", "Kansas City", "Colorado Springs", "Raleigh", "Omaha", "Miami", "Long Beach", "Virginia Beach", "Oakland", "Minneapolis", "Tampa", "Tulsa", "Arlington", "Wichita", "Bakersfield", "Aurora", "New Orleans", "Cleveland", "Anaheim", "Henderson", "Honolulu", "Riverside", "Santa Ana", "Corpus Christi", "Lexington", "San Juan", "Stockton", "St. Paul", "Cincinnati", "Greensboro", "Pittsburgh", "Irvine", "St. Louis", "Lincoln", "Orlando", "Durham", "Plano", "Anchorage", "Newark", "Chula Vista", "Fort Wayne", "Chandler", "Toledo", "St. Petersburg", "Reno", "Laredo", "Scottsdale", "North Las Vegas", "Lubbock", "Madison", "Gilbert", "Jersey City", "Glendale", "Buffalo", "Winston-Salem", "Chesapeake", "Fremont", "Norfolk", "Irving", "Garland", "Paradise", "Arlington", "Richmond", "Hialeah", "Boise", "Spokane", "Frisco", "Moreno Valley", "Tacoma", "Fontana", "Modesto", "Baton Rouge", "Port St. Lucie", "San Bernardino", "McKinney", "Fayetteville", "Santa Clarita", "Des Moines", "Oxnard", "Birmingham", "Spring Valley", "Huntsville", "Rochester", "Cape Coral", "Tempe", "Grand Rapids", "Yonkers", "Overland Park", "Salt Lake City", "Amarillo", "Augusta", "Columbus", "Tallahassee", "Montgomery", "Huntington Beach", "Akron", "Little Rock", "Glendale", "Grand Prairie", "Aurora", "Sunrise Manor", "Ontario", "Sioux Falls", "Knoxville", "Vancouver", "Mobile", "Worcester", "Chattanooga", "Brownsville", "Peoria", "Fort Lauderdale", "Shreveport", "Newport News", "Providence", "Elk Grove", "Rancho Cucamonga", "Salem", "Pembroke Pines", "Santa Rosa", "Eugene", "Oceanside", "Cary", "Fort Collins", "Corona", "Enterprise", "Garden Grove", "Springfield", "Clarksville", "Bayamon", "Lakewood", "Alexandria", "Hayward", "Murfreesboro", "Killeen", "Hollywood", "Lancaster", "Salinas", "Jackson", "Midland", "Macon County", "Kansas City", "Palmdale", "Sunnyvale", "Springfield", "Escondido", "Pomona", "Bellevue", "Surprise", "Naperville", "Pasadena", "Denton", "Roseville", "Joliet", "Thornton", "McAllen", "Paterson", "Rockford", "Carrollton", "Bridgeport", "Miramar", "Round Rock", "Metairie", "Olathe", "Waco" }));
        add(TxtGeoLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 380, 174, 30));
        add(MaintenanceDateCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 460, 174, 30));

        TitleDecor.setBackground(new java.awt.Color(255, 102, 51));
        TitleDecor.setFont(new java.awt.Font("Rockwell", 1, 25)); // NOI18N
        TitleDecor.setForeground(new java.awt.Color(255, 255, 255));
        TitleDecor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleDecor.setText("Add a Cab");
        TitleDecor.setOpaque(true);
        add(TitleDecor, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1040, 40));

        LblMinPassgnrWarning.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LblMinPassgnrWarning.setForeground(new java.awt.Color(255, 51, 51));
        add(LblMinPassgnrWarning, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 180, 310, 30));

        LblMaxPassgnrWarning.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        LblMaxPassgnrWarning.setForeground(new java.awt.Color(255, 51, 51));
        add(LblMaxPassgnrWarning, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 310, 30));

        YearChooserManufacturerYear.setEndYear(2021);
        add(YearChooserManufacturerYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 260, 70, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("*Mandatory fields");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 140, -1));
        add(LblwarningMaintenanceDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 464, 330, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSaveActionPerformed
        // TODO add your handling code here:
        
        String carModel = TxtCarModel.getText();
        int minPassengerCap = Integer.parseInt(TxtMinPassengerCap.getText());
        int maxPassengerCap = Integer.parseInt(TxtMaxPassengerCap.getText());
        long  manufacturedYear = YearChooserManufacturerYear.getYear();
        String carSerialNumber = TxtCarSerialNo.getText();
        String manufacturedBy = TxtManufacturedBy.getText();
        String geoLocation = (String) TxtGeoLocation.getSelectedItem();
        int modelNumber = Integer.parseInt(TxtModelNumber.getText());
//        String maintenanceCheck="";
        String availability="";
        SimpleDateFormat dfs = new SimpleDateFormat("yyyy-MM-dd");
        
        String maintenanceDate = dfs.format(MaintenanceDateCreate.getDate());
        
      
        Enumeration<AbstractButton> bg1 = buttonGroupAvailabilityCreate.getElements();
       
        while(bg1.hasMoreElements()){
                JRadioButton Radio2 = (JRadioButton) bg1.nextElement();
                if(Radio2.isSelected())
                     availability = Radio2.getText();
//                else if(!Radio2.isSelected()){ 
//                    JOptionPane.showMessageDialog(this,"Choose the availability of this car");
//                }
                
           }
        
        
        //date
        
        DateTimeFormatter df = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
//        

        String Date = df.format(now);
       
        
        carDetails cd = history.addNewCarDetails();
        viewJPanel viewPanel = new viewJPanel(history);
        DefaultTableModel viewmodel = (DefaultTableModel) viewPanel.carTable.getModel();
        
        boolean flag = false;
        
          for (int i = 0;i<viewmodel.getRowCount();i++){
                 if (carSerialNumber.equals(viewmodel.getValueAt(i, 0))) {
                     TxtCarSerialNo.setText(" ");
                     carSerialNumber = TxtCarSerialNo.getText();
                     JOptionPane.showMessageDialog(this, carSerialNumber + " Serial Number already exists! Re-Enter to proceed.");
                     flag = true;
                 }
                 }
          
//                    SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                  Date currentDate = new Date();
          //        Date InvalidDate = new Date("1870-01-01");
                  if(MaintenanceDateCreate.getDate().after(currentDate)){
          //            Lbl_DOBWarning.setText("This field is mandatory");
                      LblwarningMaintenanceDate.setText("This date cannot be in the future!");
                      JOptionPane.showMessageDialog(this,"Please correct the date."); 
                      flag = true;

          //            TxtDOB.setText(null);
            
        }
                 
          if(TxtCarSerialNo.getText().equals("")){
              JOptionPane.showMessageDialog(this, "Enter Serial Number");
              flag = true;
          }
              
          
          if(flag == false){
              cd.setCarModel(carModel); 
                cd.setMinPassengerCap(minPassengerCap);
                cd.setMaxPassengerCap(maxPassengerCap);
                cd.setManufacturedYear(manufacturedYear);
                cd.setCarSerialNo(carSerialNumber);
                cd.setManufacturedBy(manufacturedBy);
                cd.setGeoLocation(geoLocation);
                cd.setModelNumber(modelNumber);
                cd.setAvailability(availability);
                cd.setLastMaintenanceDate(maintenanceDate);
                cd.setDate(Date);
                JOptionPane.showMessageDialog(this, manufacturedBy+" "+carModel+" - "+modelNumber+" "+ df.format(now));
                
                TxtCarModel.setText("");
        TxtMinPassengerCap.setText("");
        TxtMaxPassengerCap.setText("");
        YearChooserManufacturerYear.removeAll();
        TxtCarSerialNo.setText("");
        TxtManufacturedBy.setText("");
        TxtGeoLocation.setSelectedIndex(0);
        TxtModelNumber.setText("");
        
        buttonGroupAvailabilityCreate.clearSelection();
          }
          
        
                
                         

                     
                     
                     
                 
        
        
        
       
        
        
        
       
//        LblModifiedDateView.setText("Fleet Database was last updated on: "+Date);
        
        
        
        
        
        
               
        
        
        
        
    }//GEN-LAST:event_BtnSaveActionPerformed

    private void RbAvailabilityNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RbAvailabilityNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RbAvailabilityNoActionPerformed

    private void TxtCarModelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCarModelKeyReleased
        // TODO add your handling code here:
        DateTimeFormatter df = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        LocalDateTime now = LocalDateTime.now();
        
        lblDate.setText("Current Date and Time: "+df.format(now));
        
       
    }//GEN-LAST:event_TxtCarModelKeyReleased

    private void TxtMinPassengerCapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtMinPassengerCapKeyReleased
        // TODO add your handling code here:
        
        
        
    }//GEN-LAST:event_TxtMinPassengerCapKeyReleased

    private void TxtMinPassengerCapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtMinPassengerCapKeyPressed
        // TODO add your handling code here:
        
        try
        {
            double min_pass;
            min_pass = Double.parseDouble(TxtMinPassengerCap.getText());
            LblMinPassgnrWarning.setText("Only 2 Numbers Allowed");
            if(TxtMinPassengerCap.getText().length() > 1){
                LblMinPassgnrWarning.setText("Re-Enter only 2 Numbers.");
                TxtMinPassengerCap.setText(null);
            }
        }
        catch(NumberFormatException e){
            //error if its not integer
//            LblMinPassgnrWarning.setText("Enter only numbers.");

            //JOptionPane.showMessageDialog(null,"You have entered incorrect/blank Phone Number. This won't be saved! Re-Submit the form again.");

            TxtMinPassengerCap.setText(null);
        }
    }//GEN-LAST:event_TxtMinPassengerCapKeyPressed

    private void TxtMaxPassengerCapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtMaxPassengerCapKeyPressed
        // TODO add your handling code here:
        
        try
        {
            double min_pass;
            min_pass = Double.parseDouble(TxtMaxPassengerCap.getText());
            
            if(Integer.parseInt(TxtMinPassengerCap.getText()) > Integer.parseInt(TxtMaxPassengerCap.getText())){
            LblMaxPassgnrWarning.setText("Lesser than Minimum passenger Capacity!");
            }
            if(TxtMaxPassengerCap.getText().length() > 1){
                LblMaxPassgnrWarning.setText("Re-Enter only 2 Numbers.");
                TxtMaxPassengerCap.setText(null);
            }
            
        }
        catch(NumberFormatException e){
            //error if its not integer
//            LblMaxPassgnrWarning.setText("Enter only numbers.");

            //JOptionPane.showMessageDialog(null,"You have entered incorrect/blank Phone Number. This won't be saved! Re-Submit the form again.");

            TxtMaxPassengerCap.setText(null);
        }
        
        
    }//GEN-LAST:event_TxtMaxPassengerCapKeyPressed

    private void TxtMaxPassengerCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtMaxPassengerCapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtMaxPassengerCapActionPerformed

    private void TxtMaxPassengerCapKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtMaxPassengerCapKeyReleased
        // TODO add your handling code here:
//         try
//        {
//            double min_pass;
//            min_pass = Double.parseDouble(TxtMaxPassengerCap.getText());
//            
//            if(Integer.parseInt(TxtMinPassengerCap.getText()) > Integer.parseInt(TxtMaxPassengerCap.getText())){
//            LblMaxPassgnrWarning.setText("Lesser than Minimum passenger Capacity!");
//            }
//            if(TxtMaxPassengerCap.getText().length() > 1){
//                LblMaxPassgnrWarning.setText("Re-Enter only 2 Numbers.");
//                TxtMaxPassengerCap.setText(null);
//            }
//            
//        }
//        catch(NumberFormatException e){
//            //error if its not integer
////            LblMaxPassgnrWarning.setText("Enter only numbers.");
//
//            //JOptionPane.showMessageDialog(null,"You have entered incorrect/blank Phone Number. This won't be saved! Re-Submit the form again.");
//
//            TxtMaxPassengerCap.setText(null);
//        }
        
        
        
    }//GEN-LAST:event_TxtMaxPassengerCapKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSave;
    private javax.swing.JLabel LblMaxPassgnrWarning;
    private javax.swing.JLabel LblMinPassgnrWarning;
    private javax.swing.JLabel LblwarningMaintenanceDate;
    private com.toedter.calendar.JDateChooser MaintenanceDateCreate;
    private javax.swing.JRadioButton RbAvailabilityNo;
    private javax.swing.JRadioButton RbAvailabilityYes;
    private javax.swing.JLabel TitleDecor;
    private javax.swing.JTextField TxtCarModel;
    private javax.swing.JTextField TxtCarSerialNo;
    private javax.swing.JComboBox<String> TxtGeoLocation;
    private javax.swing.JTextField TxtManufacturedBy;
    private javax.swing.JTextField TxtMaxPassengerCap;
    private javax.swing.JTextField TxtMinPassengerCap;
    private javax.swing.JTextField TxtModelNumber;
    private com.toedter.calendar.JYearChooser YearChooserManufacturerYear;
    private javax.swing.ButtonGroup buttonGroupAvailabilityCreate;
    private javax.swing.ButtonGroup buttonGroupMaintenanceCheckCreate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblCarModel;
    private javax.swing.JLabel lblCarSerialNo;
    private javax.swing.JLabel lblDate;
    private javax.swing.JLabel lblGeoLocation;
    private javax.swing.JLabel lblLastMaintenanceDate;
    private javax.swing.JLabel lblLastMaintenanceDate1;
    private javax.swing.JLabel lblManufacturedBy;
    private javax.swing.JLabel lblManufacturedDate;
    private javax.swing.JLabel lblMaxPassengerCap;
    private javax.swing.JLabel lblMinPassengerCap;
    private javax.swing.JLabel lblModelNumber;
    // End of variables declaration//GEN-END:variables
}
